In lesson 1 I learned four git commands:
1. git clone repository_url
	a command to clone a repository from git - all versions of the files get cloned to your local directory
2. git diff old_id new_id
	compare two git commits, an older one to a newer one, and see how many  and which lines changed
3. git log
	look at a history of commits from newest at the top to oldest. shows the commit ID and a comment 
4. git checkout commit_id
	look at an older commit 


new command:
git init
	creates a .git repositroy
git status
	shows which files have changed since the last commit
git add file.txt
	adds a file to the "staging area" to be committed in the next commit



What happens when you initialize a repository? Why do you need to do it?
	when you initialize a repository a .git directory is created. This is necessary because it is within this hidden directory that git saves all the relevant metadata that allows you to keep track of versions of your files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is a sort of "in memory" area that gets things ready for a commit. It's different from the working directory and repository because both of these are accessible spaces on the computer where you can see the files that are in the. The staging area is less robust, or real, it's not written down anywhere. This is valuable because it allows you to be specific about what to add to the commit, instead of just adding everything to a commit and looking at a bunch of things that just stayed the same between commits. Although, what if you forget to add something important to the staging area and it doesn't get included in the commit?

